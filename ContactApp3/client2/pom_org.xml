<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.test</groupId>
    <artifactId>ContactApp3</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  
  <groupId>com.test</groupId>
  <artifactId>client2</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>swf</packaging>
  
  <name>client2</name>
  
  <description>uses mx royale remote object. 
  In this client royale ArrayList is used as arrayList. blazeds serializes List of Record
  but fails to serialize List of String and List of Short. Note: when executing "mvn clean install" maven
  will build project and copy it to the spring boot blazeds project.
  use the option-with-swf maven profile (i.e. mvn -P option-with-swf clean install) to compile this only.
  To run the project switch to server folder from then execute ./mvn spring-boot:run
  access the application url here
  http://localhost:8080/js-debug/index.html
  use the option-with-swf maven profile to compile this only.</description>
  <url>http://maven.apache.org</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <royale.framework.version>0.9.8</royale.framework.version>
    <royale.compiler.version>0.9.8</royale.compiler.version>
    <royale.typedefs.version>0.9.8</royale.typedefs.version>
    <royale.showbindingWarnings>-compiler.show-binding-warnings=false;</royale.showbindingWarnings>
    <royale.sourceMapSettings>-source-map=true;</royale.sourceMapSettings>
    <royale.jsDefaultInitializers>-js-default-initializers=true;</royale.jsDefaultInitializers>
    <royale.jsDynamicAccessUnknownMembers>-js-dynamic-access-unknown-members=true;</royale.jsDynamicAccessUnknownMembers>
    <royale.targets>JSRoyale</royale.targets>
    <royale.debug>false</royale.debug>
    <royale.mxroyale.css>-compiler.exclude-defaults-css-files=MXRoyale-0.9.8-js.swc:defaults.css;</royale.mxroyale.css>
    
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--
          If you are using some injection framework
          <royale.keepAS3MetaData>-keep-as3-metadata+=
          Inject,
          Dispatcher,
          EventHandler,
          PostConstruct,
          PreDestroy,
          ViewAdded,
          ViewRemoved,
          Bindable,
          Transient
        </royale.keepAS3MetaData>-->

    <local.config>
      <!--
      -keep-code-with-metadata=Inject;
      -compiler.exclude-defaults-css-files=MXRoyale-0.9.9-SNAPSHOT-js.swc:defaults.css;
      -keep-code-with-metadata=Inject;
      -->
      <!-- ${royale.mxroyale.css} -->
      ${royale.showbindingWarnings}
      ${royale.sourceMapSettings}
      ${royale.jsDefaultInitializers}
      ${royale.jsDynamicAccessUnknownMembers}
      <!--${royale.keepAS3MetaData}-->
    </local.config>

  </properties>
  
  <build>
    <sourceDirectory>src/main/royale</sourceDirectory>
	<resources>
	   <resource>
	      <directory>${basedir}/src/resources</directory>
	      <filtering>true</filtering>
	   </resource>
	</resources>
    <plugins>
      <plugin>
        <groupId>org.apache.royale.compiler</groupId>
        <artifactId>royale-maven-plugin</artifactId>
 		<version>${royale.compiler.version}</version>
        <extensions>true</extensions>
        <configuration>
          <mainClass>ContactApp.mxml</mainClass>
          <targets>${royale.targets}</targets>
          <debug>${royale.debug}</debug>
          <htmlTemplate>${basedir}/src/resources/jewel-index-template.html</htmlTemplate>
		      <allowSubclassOverrides>true</allowSubclassOverrides>
          <additionalCompilerOptions>
			         ${local.config}
		      </additionalCompilerOptions>
        </configuration>
		<dependencies>
			  <dependency>
				<groupId>org.apache.royale.compiler</groupId>
				<artifactId>compiler-jx</artifactId>
				<version>${royale.compiler.version}</version>
			  </dependency>
		</dependencies>
      </plugin>
        
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
             <filesets>
                <fileset>
                  <directory>${project.basedir}/../Server/src/main/resources/static/js-debug/</directory>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>
         <!-- copy module files from Module target folder to Application target folder-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          
          <!-- for js-release (copy all to 'modules' folder)
          <execution>
            <id>copy-resources-release</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.basedir}/target/javascript/bin/js-release/</directory>
                </resource>
              </resources>
              <outputDirectory>${project.basedir}/../Server/src/main/resources/static/js-release/</outputDirectory>
            </configuration>
          </execution>
          -->
          <!-- for js-debug (copy all to js-debug but will need a next step later (check **))-->
          <execution>
            <id>copy-resources-debug</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.basedir}/target/javascript/bin/js-debug/</directory>
                </resource>
              </resources>
              <outputDirectory>${project.basedir}/../Server/src/main/resources/static/js-debug/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

       <!-- if our app has modules then this will be necessary  
          (**) for js-debug: we need to move two files from 'target/js-debug' to 'target/js-debug/modules' since Application expect to find it there 
       <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>debug-move-files</id>
            <phase>install</phase>
            <goals>
              <goal>rename</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <sourceFile>${project.basedir}/../Server/src/main/resources/static/js-debug/${project.artifactId}__deps.js</sourceFile>
                  <destinationFile>${project.basedir}/../MainApp/target/javascript/bin/js-debug/modules/${project.artifactId}__deps.js</destinationFile>
                </fileSet>
                <fileSet>
                  <sourceFile>${project.basedir}/../MainApp/target/javascript/bin/js-debug/${project.artifactId}.css</sourceFile>
                  <destinationFile>${project.basedir}/../MainApp/target/javascript/bin/js-debug/modules/${project.artifactId}.css</destinationFile>
                </fileSet>
              </fileSets>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->
    </plugins>
  </build>
  
  <dependencies>
	<dependency>
      <groupId>org.apache.royale.framework</groupId>
      <artifactId>Jewel</artifactId>
      <version>${royale.typedefs.version}</version>
      <type>swc</type>
      <classifier>js</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.royale.framework</groupId>
      <artifactId>HTML</artifactId>
      <version>${royale.typedefs.version}</version>
      <type>swc</type>
      <classifier>js</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.royale.framework</groupId>
      <artifactId>JewelTheme</artifactId>
      <version>${royale.typedefs.version}</version>
      <type>swc</type>
      <scope>theme</scope>
      <classifier>js</classifier>
    </dependency>	
	<dependency>
      <groupId>org.apache.royale.framework</groupId>
      <artifactId>Jewel</artifactId>
      <version>0.9.8</version>
      <type>swc</type>
      <classifier>js</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.royale.framework</groupId>
      <artifactId>Icons</artifactId>
      <version>0.9.8</version>
      <type>swc</type>
      <classifier>js</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.royale.framework</groupId>
      <artifactId>Jewel-Light-NoFlat-Primary-Red-Theme</artifactId>
      <version>0.9.8</version>
      <type>swc</type>
      <scope>theme</scope>
      <classifier>js</classifier>
    </dependency>
	<dependency>
      <groupId>org.apache.royale.framework</groupId>
      <artifactId>Network</artifactId>
      <version>${royale.framework.version}</version>
      <type>swc</type>
      <classifier>js</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.royale.framework</groupId>
      <artifactId>Reflection</artifactId>
      <version>${royale.framework.version}</version>
      <type>swc</type>
      <classifier>js</classifier>
    </dependency>
</dependencies>


     <profiles>
    <profile>
      <id>option-with-swf</id>
      <dependencies>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Core</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Basic</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Language</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>HTML</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Collections</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Binding</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Graphics</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Effects</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>MXRoyale</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Text</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>TLF</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
          </dependency>
          <dependency>
            <groupId>org.apache.royale.framework</groupId>
            <artifactId>SparkRoyale</artifactId>
            <version>0.9.8</version>
            <type>swc</type>
            <classifier>swf</classifier>
          </dependency>
         <!--  from remote object test example -->
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Jewel</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Icons</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Network</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.royale.framework</groupId>
          <artifactId>Reflection</artifactId>
          <version>0.9.8</version>
          <type>swc</type>
          <classifier>swf</classifier>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
	 
</project>
